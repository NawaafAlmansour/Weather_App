{"version":3,"sources":["components/Home.js","components/About.js","components/search_page/Titles.js","components/search_page/Form.js","components/search_page/Weather.js","components/search.js","components/CustomNavbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","props","state","Container","Jumbotron","Row","className","Col","xs","sm","Image","src","Component","About","smOffset","rpunded","Titles","format","this","dateToFormat","React","Form","onSubmit","getWeather","type","name","placeholder","Weather","city","country","temperature","humidity","description","id","icon","alt","error","API_KEY","search","undefined","img","event","a","preventDefault","target","elements","value","fetch","api_call","json","data","setState","main","temp","sys","weather","axios","get","then","response","urls","regular","catch","console","log","Fragment","style","backgroundImage","CustomNavbar","Navbar","bg","expand","Brand","to","Toggle","aria-controls","Collapse","Nav","width","Link","href","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e00bfe0a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {\n  Jumbotron,\n  Container,\n  Row,\n  Col,\n  Image,\n  Button\n} from 'react-bootstrap';\nimport './Home.css'\nexport default class Home extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container>\n      <Jumbotron>\n        <h2>Welcom to ...</h2>\n        <p>build Ract app\n        </p>\n      </Jumbotron>\n      <Row className=\"show-grid text-center\">\n        <Col xs={12} sm={4} className=\"pwerson-wrapper\">\n          <Image src=\"assets/image-1.jpg\"  className=\"rounded-circle img-fluid\"/>\n          <h3>Node</h3>\n          <p>It is a lot of fun. If you didn't have baby clouds, you wouldn't\n          have big clouds. Just let your mind wander and enjoy.</p>\n        </Col>\n        <Col xs={12} sm={4} className=\"pwerson-wrapper\">\n          <Image src=\"assets/image-1.jpg\"  className=\"rounded-circle img-fluid\"/>\n          <h3>Node</h3>\n          <p>It is a lot of fun. If you didn't have baby clouds, you wouldn't\n          have big clouds. Just let your mind wander and enjoy.</p>\n        </Col>\n        <Col xs={12} sm={4} className=\"pwerson-wrapper\">\n          <Image src=\"assets/image-1.jpg\"  className=\"rounded-circle img-fluid\"/>\n          <h3>Node</h3>\n          <p>It is a lot of fun. If you didn't have baby clouds, you wouldn't\n          have big clouds. Just let your mind wander and enjoy.</p>\n        </Col>\n      </Row>\n    </Container>);\n  }\n\n}\n","import React, { Component } from 'react';\nimport {\n  Jumbotron,\n  Container,\n  Row,\n  Col,\n  Image,\n  Button\n} from 'react-bootstrap';\n\nexport default class About extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div>\n      <Row className=\"show-grid text-center\">\n        <Col xs={12} sm={4} smOffset={2} className=\"pwerson-wrapper\">\n          <Image src=\"assets/image-1.jpg\"  className=\"rounded-circle img-fluid\" rpunded/>\n          <h3>Node</h3>\n          <p>It is a lot of fun. If you didn't have baby clouds, you wouldn't\n          have big clouds. Just let your mind wander and enjoy.</p>\n        </Col>\n      </Row>\n      </div>\n    );\n\n  }\n\n}\n","import React from 'react';\nimport './Titles.css';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport * as moment from 'moment'\n\n\n\n//moment-timezone\n\n//const dateToFormat = new Date('2019-08-19T12:59-0500');\n\nexport default class Titles extends React.Component {\n\n  render() {\n     return (\n\n      <div className=\"Titles\">\n   \t  \t<h1 className=\"title-container__title\">Weather Finder</h1>\n\t    \t<h3 className=\"title-container__subtitle\">Find out temperature, conditions and more...</h3>\n           <div>\n             <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{this.props.dateToFormat}</Moment>\n          </div>\n    </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport './Form.css';\n\nexport default class Form extends React.Component {\n\n  static propTypes = {\n\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n  render() {\n     return (\n       <form onSubmit={this.props.getWeather}>\n        <input type=\"text\" name=\"city\" placeholder=\"City..\" />\n         <input type=\"text\" name=\"country\" placeholder=\"country..\" />\n         <button> Get Wteaher</button>\n      </form>\n    );\n  }\n\n}\n","import React from 'react';\nimport './Weather.css';\n\nexport default class Weather extends React.Component {\n\n  render() {\n     return (\n       <div className=\"weather__info\">\n   \t {\n   \t \tthis.props.city && this.props.country && <p className=\"weather__key\"> Location:\n   \t \t\t<span className=\"weather__value\"> { this.props.city }, { this.props.country }</span>\n   \t \t</p>\n   \t }\n   \t {\n   \t \tthis.props.temperature && <p className=\"weather__key\"> Temperature:\n   \t \t\t<span className=\"weather__value\"> { this.props.temperature }\t</span>\n   \t \t</p>\n   \t }\n   \t {\n   \t \tthis.props.humidity && <p className=\"weather__key\"> Humidity:\n   \t \t\t<span className=\"weather__value\"> { this.props.humidity } </span>\n   \t \t</p>\n   \t }\n   \t {\n   \t \tthis.props.description && <p className=\"weather__key\"> Conditions:\n   \t \t\t<span className=\"weather__value\"> { this.props.description }</span>\n          <img id=\"wicon\" src={`http://openweathermap.org/img/w/${this.props.icon}.png`} alt={ this.props.icon }/>\n    </p>\n   \t }\n   \t {\n   \t \tthis.props.error && <p className=\"weather__error\">{ this.props.error }</p>\n   \t }\n   \t</div>\n    );\n  }\n\n}\n","import React from 'react';\nimport './search.css';\nimport Titles from './search_page/Titles';\nimport Form from './search_page/Form';\nimport Weather from './search_page/Weather';\nimport axios from 'axios';\n\nconst API_KEY = \"25522e43a0611c1ca9b86a7346379978\";\n\nexport default class search extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon: undefined,\n    error: undefined,\n    img:  undefined\n  }\n\n  getWeather = async (event) =>{\n    event.preventDefault();\n    const city = event.target.elements.city.value;\n    const country = event.target.elements.country.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    if (city && country ) {\n     this.setState({\n      temperature: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      humidity: data.main.humidity,\n      description: data.weather[0].description,\n      icon: data.weather[0].icon ,\n      error: \" \"\n\n    });\n  }else{\n    this.setState({\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon: undefined,\n    error: \"Please enter the value\"\n  });\n  }\n  }\n\n  componentDidMount() {\n   axios.get(`https://api.unsplash.com/photos/random/?client_id=c4268fc7a9c8c92823adc3e91336ba33b2eb873fa71c3a79ca93a12fa0d53887`)\n     .then(response => {\n       this.setState({\n   img: response.data.urls.regular\n     });\n     })\n    .catch(error => {\n      console.log(error)\n    })\n\n }\n\n  render() {\n    return (\n    <React.Fragment>\n          <div className=\"wrapper\">\n            <div className=\"main\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-xs-5 title-container\"\n                    style ={ { backgroundImage: \"url(\"+this.state.img+\")\" } }>\n                  <Titles />\n                  </div>\n                  <div className=\"col-xs-7 form-container\">\n                    <Form getWeather={this.getWeather} />\n                    <Weather\n                      temperature={this.state.temperature}\n                      humidity={this.state.humidity}\n                      city={this.state.city}\n                      country={this.state.country}\n                      description={this.state.description}\n                      icon={this.state.icon}\n                      error={this.state.error}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n    );\n  }\n\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './CustomNavbar.css'\n\nexport default class CustomNavbar extends Component {\n  render() {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n           <Navbar.Brand>\n            <Link to=\"/\">Blog</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n         <Navbar.Collapse>\n          <Nav className=\"mr-auto justify-content-end\" style={{ width: \"90%\" }}>\n            <Nav.Link href=\"/\">Home</Nav.Link>\n\n              <Nav.Link href=\"/About\">About</Nav.Link>\n\n            <Nav.Link href=\"/News\">News</Nav.Link>\n            <Nav.Link href=\"/search\">Weather</Nav.Link>\n\n\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React,{Component} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router,Switch, Route } from 'react-router-dom'\n\nimport Home from './components/Home';\nimport About from './components/About';\nimport search from './components/search';\n\n import Navbar from './components/CustomNavbar';\n\nexport default class App extends Component {\n  componentDidMount() {\n   }\n  render() {\n    return (\n  <Router>\n    <Navbar/>\n      <div>\n      <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/About\" component={About} />\n      <Route path=\"/search\" component={search} />\n       <Route component={Home} />\n  </Switch>\n  </div>\n</Router>\n  );\n  }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}